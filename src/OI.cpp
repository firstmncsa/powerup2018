// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/CubeIn.h"
#include "Commands/CubeOut.h"
#include "Commands/DeliverVault.h"
#include "Commands/DriveRobot.h"
#include "Commands/GatherCube.h"
#include "Commands/MoveElevator.h"
#include "Commands/MoveElevatorPot.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    f310.reset(new frc::Joystick(2));

    f310_b.reset(new frc::JoystickButton(f310.get(), 2));
    f310_b->WhileHeld(new CubeOut());
    f310_a.reset(new frc::JoystickButton(f310.get(), 1));
    f310_a->WhileHeld(new CubeIn());
    xbox.reset(new frc::Joystick(1));

    xbox_b.reset(new frc::JoystickButton(xbox.get(), 2));
    xbox_b->WhileHeld(new CubeOut());
    xbox_a.reset(new frc::JoystickButton(xbox.get(), 1));
    xbox_a->WhileHeld(new CubeIn());
    joystick.reset(new frc::Joystick(0));

    button_thumb.reset(new frc::JoystickButton(joystick.get(), 2));
    button_thumb->WhileHeld(new CubeOut());
    trigger.reset(new frc::JoystickButton(joystick.get(), 1));
    trigger->WhileHeld(new CubeIn());

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("DriveRobot", new DriveRobot());
    frc::SmartDashboard::PutData("Gather Cube", new GatherCube());
    frc::SmartDashboard::PutData("Move Elevator Pot: intake", new MoveElevatorPot(0));
    frc::SmartDashboard::PutData("Move Elevator Pot: vault", new MoveElevatorPot(0.1));
    frc::SmartDashboard::PutData("Move Elevator Pot: low_switch", new MoveElevatorPot(0.3));
    frc::SmartDashboard::PutData("Move Elevator Pot: high_switch", new MoveElevatorPot(0.4));
    frc::SmartDashboard::PutData("Move Elevator Pot: low_scale", new MoveElevatorPot(0.6));
    frc::SmartDashboard::PutData("Move Elevator Pot: high_scale", new MoveElevatorPot(0.8));
    frc::SmartDashboard::PutData("Move Elevator Pot: lift_point", new MoveElevatorPot(1));
    frc::SmartDashboard::PutData("Cube Out", new CubeOut());
    frc::SmartDashboard::PutData("Move Elevator: intake", new MoveElevator(0));
    frc::SmartDashboard::PutData("Move Elevator: vault", new MoveElevator(1));
    frc::SmartDashboard::PutData("Move Elevator: low_switch", new MoveElevator(2));
    frc::SmartDashboard::PutData("Move Elevator: high_switch", new MoveElevator(3));
    frc::SmartDashboard::PutData("Move Elevator: low_scale", new MoveElevator(4));
    frc::SmartDashboard::PutData("Move Elevator: high_scale", new MoveElevator(5));
    frc::SmartDashboard::PutData("Move Elevator: lift_point", new MoveElevator(6));
    frc::SmartDashboard::PutData("Cube In", new CubeIn());
    frc::SmartDashboard::PutData("Deliver Vault", new DeliverVault());
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getJoystick() {
   return joystick;
}

std::shared_ptr<frc::Joystick> OI::getXbox() {
   return xbox;
}

std::shared_ptr<frc::Joystick> OI::getF310() {
   return f310;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
